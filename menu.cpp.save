#include <stdio.h>

#include "code\open_1_1.cpp"
#include "code\open_1_2.cpp"
#include "code\open_1_4.cpp"
#include "code\open_1_5.cpp"
#include "code\open_1_6.cpp"
#include "code\open_2_1.cpp"
#include "code\open_2_2.cpp"
#include "code\open_2_3.cpp"
#include "code\open_2_5.cpp"
#include "code\open_2_6.cpp"
#include "code\open_3_1.cpp"
#include "code\open_3_3.cpp"
#include "code\open_3_4.cpp"
#include "code\open_3_5.cpp"
#include "code\open_3_6.cpp"
#include "code\open_3_7.cpp"
#include "code\open_3_8.cpp"
#include "code\open_4_1.cpp"
#include "code\open_4_2.cpp"
#include "code\open_4_3.cpp"
#include "code\open_4_5.cpp"
#include "code\open_4_6.cpp"
#include "code\open_4_7.cpp"

void menu_logo (void);

void menu (void)
{
    cleardevice();

    /**< 保存菜单的信息 */
    menu_bar menu_bar[4][10]={
    {
        {20, 120, menu_bar[0][0].x1+215, menu_bar[0][0].y1+40, menu_bar[0][0].x1+15, menu_bar[0][0].y1+15, "1.指针与一维数组" },
        {menu_bar[0][0].x1, menu_bar[0][0].y2+20, menu_bar[0][1].x1+215, menu_bar[0][1].y1+40, menu_bar[0][1].x1+15, menu_bar[0][1].y1+15, "1_1数组输入、输出和统计" },
        {menu_bar[0][0].x1, menu_bar[0][1].y2+20, menu_bar[0][2].x1+215, menu_bar[0][2].y1+40, menu_bar[0][2].x1+15, menu_bar[0][2].y1+15, "1_2数组循环移位" },
        {menu_bar[0][0].x1, menu_bar[0][2].y2+20, menu_bar[0][3].x1+215, menu_bar[0][3].y1+40, menu_bar[0][3].x1+15, menu_bar[0][3].y1+15, "" },
        {menu_bar[0][0].x1, menu_bar[0][3].y2+20, menu_bar[0][4].x1+215, menu_bar[0][4].y1+40, menu_bar[0][4].x1+15, menu_bar[0][4].y1+15, "1_4选择排序" },
        {menu_bar[0][0].x1, menu_bar[0][4].y2+20, menu_bar[0][5].x1+215, menu_bar[0][5].y1+40, menu_bar[0][5].x1+15, menu_bar[0][5].y1+15, "1_5数组的升序排列" },
        {menu_bar[0][0].x1, menu_bar[0][5].y2+20, menu_bar[0][6].x1+215, menu_bar[0][6].y1+40, menu_bar[0][6].x1+15, menu_bar[0][6].y1+15, "1_6删除数组中重复字符" },
        {menu_bar[0][0].x1, menu_bar[0][6].y2+20, menu_bar[0][7].x1+215, menu_bar[0][7].y1+40, menu_bar[0][7].x1+15, menu_bar[0][7].y1+15, "" },
        {menu_bar[0][0].x1, menu_bar[0][7].y2+20, menu_bar[0][8].x1+215, menu_bar[0][8].y1+40, menu_bar[0][8].x1+15, menu_bar[0][8].y1+15, "" },
        {menu_bar[0][0].x1, menu_bar[0][8].y2+20, menu_bar[0][9].x1+215, menu_bar[0][9].y1+40, menu_bar[0][9].x1+15, menu_bar[0][9].y1+15, "" },
    },
    {
        {menu_bar[0][0].x2+20, menu_bar[0][0].y1, menu_bar[1][0].x1+215, menu_bar[0][0].y1+40, menu_bar[1][0].x1+15, menu_bar[1][0].y1+15, "2.指针与二维数组" },
        {menu_bar[0][0].x2+20, menu_bar[0][1].y1, menu_bar[1][0].x1+215, menu_bar[0][1].y1+40, menu_bar[1][1].x1+15, menu_bar[1][1].y1+15, "2_1查找最小值的下标" },
        {menu_bar[0][0].x2+20, menu_bar[0][2].y1, menu_bar[1][0].x1+215, menu_bar[0][2].y1+40, menu_bar[1][2].x1+15, menu_bar[1][2].y1+15, "2_2求两个5x6矩阵的和" },
        {menu_bar[0][0].x2+20, menu_bar[0][3].y1, menu_bar[1][0].x1+215, menu_bar[0][3].y1+40, menu_bar[1][3].x1+15, menu_bar[1][3].y1+15, "2_3上三角矩阵的判断" },
        {menu_bar[0][0].x2+20, menu_bar[0][4].y1, menu_bar[1][0].x1+215, menu_bar[0][4].y1+40, menu_bar[1][4].x1+15, menu_bar[1][4].y1+15, "" },
        {menu_bar[0][0].x2+20, menu_bar[0][5].y1, menu_bar[1][0].x1+215, menu_bar[0][5].y1+40, menu_bar[1][5].x1+15, menu_bar[1][5].y1+15, "2_5求二维数组各行平均值" },
        {menu_bar[0][0].x2+20, menu_bar[0][6].y1, menu_bar[1][0].x1+215, menu_bar[0][6].y1+40, menu_bar[1][6].x1+15, menu_bar[1][6].y1+15, "2_6矩阵相乘" },
        {menu_bar[0][0].x2+20, menu_bar[0][7].y1, menu_bar[1][0].x1+215, menu_bar[0][7].y1+40, menu_bar[1][7].x1+15, menu_bar[1][7].y1+15, "" },
        {menu_bar[0][0].x2+20, menu_bar[0][8].y1, menu_bar[1][0].x1+215, menu_bar[0][8].y1+40, menu_bar[1][8].x1+15, menu_bar[1][8].y1+15, "" },
        {menu_bar[0][0].x2+20, menu_bar[0][9].y1, menu_bar[1][0].x1+215, menu_bar[0][9].y1+40, menu_bar[1][9].x1+15, menu_bar[1][9].y1+15, "" },
    },
    {
        {menu_bar[1][0].x2+20, menu_bar[0][0].y1, menu_bar[2][0].x1+215, menu_bar[0][0].y1+40, menu_bar[2][0].x1+15, menu_bar[1][0].y1+15, "3.指针与字符串" },
        {menu_bar[1][0].x2+20, menu_bar[0][1].y1, menu_bar[2][0].x1+215, menu_bar[0][1].y1+40, menu_bar[2][1].x1+15, menu_bar[1][1].y1+15, "3_1逆序输出字符串" },
        {menu_bar[1][0].x2+20, menu_bar[0][2].y1, menu_bar[2][0].x1+215, menu_bar[0][2].y1+40, menu_bar[2][2].x1+15, menu_bar[1][2].y1+15, "" },
        {menu_bar[1][0].x2+20, menu_bar[0][3].y1, menu_bar[2][0].x1+215, menu_bar[0][3].y1+40, menu_bar[2][3].x1+15, menu_bar[1][3].y1+15, "3_3字符串加密" },
        {menu_bar[1][0].x2+20, menu_bar[0][4].y1, menu_bar[2][0].x1+215, menu_bar[0][4].y1+40, menu_bar[2][4].x1+15, menu_bar[1][4].y1+15, "3_4判断是否为回文" },
        {menu_bar[1][0].x2+20, menu_bar[0][5].y1, menu_bar[2][0].x1+215, menu_bar[0][5].y1+40, menu_bar[2][5].x1+15, menu_bar[1][5].y1+15, "3_5字符串的局部复制" },
        {menu_bar[1][0].x2+20, menu_bar[0][6].y1, menu_bar[2][0].x1+215, menu_bar[0][6].y1+40, menu_bar[2][6].x1+15, menu_bar[1][6].y1+15, "3_6删除所有c字符" },
        {menu_bar[1][0].x2+20, menu_bar[0][7].y1, menu_bar[2][0].x1+215, menu_bar[0][7].y1+40, menu_bar[2][7].x1+15, menu_bar[1][7].y1+15, "3_7字符串的查找" },
        {menu_bar[1][0].x2+20, menu_bar[0][8].y1, menu_bar[2][0].x1+215, menu_bar[0][8].y1+40, menu_bar[2][8].x1+15, menu_bar[1][8].y1+15, "3_8实现字符串的比较" },
        {menu_bar[1][0].x2+20, menu_bar[0][9].y1, menu_bar[2][0].x1+215, menu_bar[0][9].y1+40, menu_bar[2][9].x1+15, menu_bar[1][9].y1+15, "" }
    },
    {
        {menu_bar[2][0].x2+20, menu_bar[0][0].y1, menu_bar[3][0].x1+215, menu_bar[0][0].y1+40, menu_bar[3][0].x1+15, menu_bar[1][0].y1+15, "4.指针与链表" },
        {menu_bar[2][0].x2+20, menu_bar[0][1].y1, menu_bar[3][0].x1+215, menu_bar[0][1].y1+40, menu_bar[3][1].x1+15, menu_bar[1][1].y1+15, "4_1链表的创建" },
        {menu_bar[2][0].x2+20, menu_bar[0][2].y1, menu_bar[3][0].x1+215, menu_bar[0][2].y1+40, menu_bar[3][2].x1+15, menu_bar[1][2].y1+15, "4_2链表的插入" },
        {menu_bar[2][0].x2+20, menu_bar[0][3].y1, menu_bar[3][0].x1+215, menu_bar[0][3].y1+40, menu_bar[3][3].x1+15, menu_bar[1][3].y1+15, "4_3链表元素的输出" },
        {menu_bar[2][0].x2+20, menu_bar[0][4].y1, menu_bar[3][0].x1+215, menu_bar[0][4].y1+40, menu_bar[3][4].x1+15, menu_bar[1][4].y1+15, "" },
        {menu_bar[2][0].x2+20, menu_bar[0][5].y1, menu_bar[3][0].x1+215, menu_bar[0][5].y1+40, menu_bar[3][5].x1+15, menu_bar[1][5].y1+15, "4_5链表的按序插入" },
        {menu_bar[2][0].x2+20, menu_bar[0][6].y1, menu_bar[3][0].x1+215, menu_bar[0][6].y1+40, menu_bar[3][6].x1+15, menu_bar[1][6].y1+15, "4_6链表中删除某个节点" },
        {menu_bar[2][0].x2+20, menu_bar[0][7].y1, menu_bar[3][0].x1+215, menu_bar[0][7].y1+40, menu_bar[3][7].x1+15, menu_bar[1][7].y1+15, "4_7约瑟夫环问题" },
        {menu_bar[2][0].x2+20, menu_bar[0][8].y1, menu_bar[3][0].x1+215, menu_bar[0][8].y1+40, menu_bar[3][8].x1+15, menu_bar[1][8].y1+15, "" },
        {menu_bar[2][0].x2+20, menu_bar[0][9].y1, menu_bar[3][0].x1+215, menu_bar[0][9].y1+40, menu_bar[3][9].x1+15, menu_bar[1][9].y1+15, "" }
    }
    };

    menu_logo();
/*
    PIMAGE logo = newimage();
    getimage(logo,"logo.png");
    putimage(150,40,logo);
    delimage(logo);
*/
    /**< 画出按钮 */
    setfillcolor(BLUE);
    setcolor(BLUE);
    bar(menu_bar[0][0].x1, menu_bar[0][0].y1, menu_bar[0][0].x2, menu_bar[0][0].y2);
    bar(menu_bar[0][1].x1, menu_bar[0][1].y1, menu_bar[0][1].x2, menu_bar[0][1].y2);
    bar(menu_bar[0][2].x1, menu_bar[0][2].y1, menu_bar[0][2].x2, menu_bar[0][2].y2);
    bar(menu_bar[0][3].x1, menu_bar[0][3].y1, menu_bar[0][3].x2, menu_bar[0][3].y2);
    bar(menu_bar[0][4].x1, menu_bar[0][4].y1, menu_bar[0][4].x2, menu_bar[0][4].y2);
    bar(menu_bar[0][5].x1, menu_bar[0][5].y1, menu_bar[0][5].x2, menu_bar[0][5].y2);
    bar(menu_bar[0][6].x1, menu_bar[0][6].y1, menu_bar[0][6].x2, menu_bar[0][6].y2);
    //bar(menu_bar[0][7].x1, menu_bar[0][7].y1, menu_bar[0][7].x2, menu_bar[0][7].y2);
    //bar(menu_bar[0][8].x1, menu_bar[0][8].y1, menu_bar[0][8].x2, menu_bar[0][8].y2);
    //bar(menu_bar[0][9].x1, menu_bar[0][9].y1, menu_bar[0][9].x2, menu_bar[0][9].y2);

    setfillcolor(GREEN);
    bar(menu_bar[1][0].x1, menu_bar[1][0].y1, menu_bar[1][0].x2, menu_bar[1][0].y2);
    bar(menu_bar[1][1].x1, menu_bar[1][1].y1, menu_bar[1][1].x2, menu_bar[1][1].y2);
    bar(menu_bar[1][2].x1, menu_bar[1][2].y1, menu_bar[1][2].x2, menu_bar[1][2].y2);
    bar(menu_bar[1][3].x1, menu_bar[1][3].y1, menu_bar[1][3].x2, menu_bar[1][3].y2);
    bar(menu_bar[1][4].x1, menu_bar[1][4].y1, menu_bar[1][4].x2, menu_bar[1][4].y2);
    bar(menu_bar[1][5].x1, menu_bar[1][5].y1, menu_bar[1][5].x2, menu_bar[1][5].y2);
    bar(menu_bar[1][6].x1, menu_bar[1][6].y1, menu_bar[1][6].x2, menu_bar[1][6].y2);
    //bar(menu_bar[1][7].x1, menu_bar[1][7].y1, menu_bar[1][7].x2, menu_bar[1][7].y2);
    //bar(menu_bar[1][8].x1, menu_bar[1][8].y1, menu_bar[1][8].x2, menu_bar[1][8].y2);
    //bar(menu_bar[1][9].x1, menu_bar[1][9].y1, menu_bar[1][9].x2, menu_bar[1][9].y2);

    setfillcolor(EGERGB(214,50,0));
    bar(menu_bar[2][0].x1, menu_bar[2][0].y1, menu_bar[2][0].x2, menu_bar[2][0].y2);
    bar(menu_bar[2][1].x1, menu_bar[2][1].y1, menu_bar[2][1].x2, menu_bar[2][1].y2);
    bar(menu_bar[2][2].x1, menu_bar[2][2].y1, menu_bar[2][2].x2, menu_bar[2][2].y2);
    bar(menu_bar[2][3].x1, menu_bar[2][3].y1, menu_bar[2][3].x2, menu_bar[2][3].y2);
    bar(menu_bar[2][4].x1, menu_bar[2][4].y1, menu_bar[2][4].x2, menu_bar[2][4].y2);
    bar(menu_bar[2][5].x1, menu_bar[2][5].y1, menu_bar[2][5].x2, menu_bar[2][5].y2);
    bar(menu_bar[2][6].x1, menu_bar[2][6].y1, menu_bar[2][6].x2, menu_bar[2][6].y2);
    bar(menu_bar[2][7].x1, menu_bar[2][7].y1, menu_bar[2][7].x2, menu_bar[2][7].y2);
    bar(menu_bar[2][8].x1, menu_bar[2][8].y1, menu_bar[2][8].x2, menu_bar[2][8].y2);
    bar(menu_bar[2][9].x1, menu_bar[2][9].y1, menu_bar[2][9].x2, menu_bar[2][9].y2);

    setfillcolor(MAGENTA);
    bar(menu_bar[3][0].x1, menu_bar[3][0].y1, menu_bar[3][0].x2, menu_bar[3][0].y2);
    bar(menu_bar[3][1].x1, menu_bar[3][1].y1, menu_bar[3][1].x2, menu_bar[3][1].y2);
    bar(menu_bar[3][2].x1, menu_bar[3][2].y1, menu_bar[3][2].x2, menu_bar[3][2].y2);
    bar(menu_bar[3][3].x1, menu_bar[3][3].y1, menu_bar[3][3].x2, menu_bar[3][3].y2);
    bar(menu_bar[3][4].x1, menu_bar[3][4].y1, menu_bar[3][4].x2, menu_bar[3][4].y2);
    bar(menu_bar[3][5].x1, menu_bar[3][5].y1, menu_bar[3][5].x2, menu_bar[3][5].y2);
    bar(menu_bar[3][6].x1, menu_bar[3][6].y1, menu_bar[3][6].x2, menu_bar[3][6].y2);
    bar(menu_bar[3][7].x1, menu_bar[3][7].y1, menu_bar[3][7].x2, menu_bar[3][7].y2);
    //bar(menu_bar[3][8].x1, menu_bar[3][8].y1, menu_bar[3][8].x2, menu_bar[3][8].y2);
    //bar(menu_bar[3][9].x1, menu_bar[3][9].y1, menu_bar[3][9].x2, menu_bar[3][9].y2);


    /**< 输出按钮名称 */
    setbkmode(TRANSPARENT);
    setcolor(WHITE);
    outtextxy (menu_bar[0][0].value_x, menu_bar[0][0].value_y, menu_bar[0][0].value);
    outtextxy (menu_bar[0][1].value_x, menu_bar[0][1].value_y, menu_bar[0][1].value);
    outtextxy (menu_bar[0][2].value_x, menu_bar[0][2].value_y, menu_bar[0][2].value);
    outtextxy (menu_bar[0][3].value_x, menu_bar[0][3].value_y, menu_bar[0][3].value);
    outtextxy (menu_bar[0][4].value_x, menu_bar[0][4].value_y, menu_bar[0][4].value);
    outtextxy (menu_bar[0][5].value_x, menu_bar[0][5].value_y, menu_bar[0][5].value);
    outtextxy (menu_bar[0][6].value_x, menu_bar[0][6].value_y, menu_bar[0][6].value);
    outtextxy (menu_bar[0][7].value_x, menu_bar[0][7].value_y, menu_bar[0][7].value);
    outtextxy (menu_bar[0][8].value_x, menu_bar[0][8].value_y, menu_bar[0][8].value);
    outtextxy (menu_bar[0][9].value_x, menu_bar[0][9].value_y, menu_bar[0][9].value);

    outtextxy (menu_bar[1][0].value_x, menu_bar[1][0].value_y, menu_bar[1][0].value);
    outtextxy (menu_bar[1][1].value_x, menu_bar[1][1].value_y, menu_bar[1][1].value);
    outtextxy (menu_bar[1][2].value_x, menu_bar[1][2].value_y, menu_bar[1][2].value);
    outtextxy (menu_bar[1][3].value_x, menu_bar[1][3].value_y, menu_bar[1][3].value);
    outtextxy (menu_bar[1][4].value_x, menu_bar[1][4].value_y, menu_bar[1][4].value);
    outtextxy (menu_bar[1][5].value_x, menu_bar[1][5].value_y, menu_bar[1][5].value);
    outtextxy (menu_bar[1][6].value_x, menu_bar[1][6].value_y, menu_bar[1][6].value);
    outtextxy (menu_bar[1][7].value_x, menu_bar[1][7].value_y, menu_bar[1][7].value);
    outtextxy (menu_bar[1][8].value_x, menu_bar[1][8].value_y, menu_bar[1][8].value);
    outtextxy (menu_bar[1][9].value_x, menu_bar[1][9].value_y, menu_bar[1][9].value);

    outtextxy (menu_bar[2][0].value_x, menu_bar[2][0].value_y, menu_bar[2][0].value);
    outtextxy (menu_bar[2][1].value_x, menu_bar[2][1].value_y, menu_bar[2][1].value);
    outtextxy (menu_bar[2][2].value_x, menu_bar[2][2].value_y, menu_bar[2][2].value);
    outtextxy (menu_bar[2][3].value_x, menu_bar[2][3].value_y, menu_bar[2][3].value);
    outtextxy (menu_bar[2][4].value_x, menu_bar[2][4].value_y, menu_bar[2][4].value);
    outtextxy (menu_bar[2][5].value_x, menu_bar[2][5].value_y, menu_bar[2][5].value);
    outtextxy (menu_bar[2][6].value_x, menu_bar[2][6].value_y, menu_bar[2][6].value);
    outtextxy (menu_bar[2][7].value_x, menu_bar[2][7].value_y, menu_bar[2][7].value);
    outtextxy (menu_bar[2][8].value_x, menu_bar[2][8].value_y, menu_bar[2][8].value);
    outtextxy (menu_bar[2][9].value_x, menu_bar[2][9].value_y, menu_bar[2][9].value);

    outtextxy (menu_bar[3][0].value_x, menu_bar[3][0].value_y, menu_bar[3][0].value);
    outtextxy (menu_bar[3][1].value_x, menu_bar[3][1].value_y, menu_bar[3][1].value);
    outtextxy (menu_bar[3][2].value_x, menu_bar[3][2].value_y, menu_bar[3][2].value);
    outtextxy (menu_bar[3][3].value_x, menu_bar[3][3].value_y, menu_bar[3][3].value);
    outtextxy (menu_bar[3][4].value_x, menu_bar[3][4].value_y, menu_bar[3][4].value);
    outtextxy (menu_bar[3][5].value_x, menu_bar[3][5].value_y, menu_bar[3][5].value);
    outtextxy (menu_bar[3][6].value_x, menu_bar[3][6].value_y, menu_bar[3][6].value);
    outtextxy (menu_bar[3][7].value_x, menu_bar[3][7].value_y, menu_bar[3][7].value);
    outtextxy (menu_bar[3][8].value_x, menu_bar[3][8].value_y, menu_bar[3][8].value);
    outtextxy (menu_bar[3][9].value_x, menu_bar[3][9].value_y, menu_bar[3][9].value);

    setbkmode(OPAQUE);

    /**< 菜单选择 */
    mouse_msg msg = {0};

    for (;1;)
    {
        msg  = getmouse();
        if (msg.is_down())
        {
            if(between(msg.x,menu_bar[0][0].x1, menu_bar[0][0].x2))
            {
                if(between(msg.y, menu_bar[0][1].y1, menu_bar[0][1].y2)){cleardevice();open_1_1();break;}
                if(between(msg.y, menu_bar[0][2].y1, menu_bar[0][2].y2)){cleardevice();open_1_2();break;}
                if(between(msg.y, menu_bar[0][3].y1, menu_bar[0][3].y2)){cleardevice();break;}
                if(between(msg.y, menu_bar[0][4].y1, menu_bar[0][4].y2)){cleardevice();open_1_4();break;}
                if(between(msg.y, menu_bar[0][5].y1, menu_bar[0][5].y2)){cleardevice();open_1_5();break;}
                if(between(msg.y, menu_bar[0][6].y1, menu_bar[0][6].y2)){cleardevice();open_1_6();break;}
                if(between(msg.y, menu_bar[0][7].y1, menu_bar[0][7].y2)){cleardevice();break;}
                if(between(msg.y, menu_bar[0][8].y1, menu_bar[0][8].y2)){cleardevice();break;}
                if(between(msg.y, menu_bar[0][9].y1, menu_bar[0][9].y2)){cleardevice();break;}
            }
            if(between(msg.x,menu_bar[1][0].x1, menu_bar[1][0].x2))
            {
                if(between(msg.y, menu_bar[1][1].y1, menu_bar[1][1].y2)){cleardevice();open_2_1();break;}
                if(between(msg.y, menu_bar[1][2].y1, menu_bar[1][2].y2)){cleardevice();open_2_2();break;}
                if(between(msg.y, menu_bar[1][3].y1, menu_bar[1][3].y2)){cleardevice();open_2_3();break;}
                if(between(msg.y, menu_bar[1][4].y1, menu_bar[1][4].y2)){cleardevice();break;}
                if(between(msg.y, menu_bar[1][5].y1, menu_bar[1][5].y2)){cleardevice();open_2_5();break;}
                if(between(msg.y, menu_bar[1][6].y1, menu_bar[1][6].y2)){cleardevice();open_2_6();break;}
                if(between(msg.y, menu_bar[1][7].y1, menu_bar[1][7].y2)){cleardevice();break;}
                if(between(msg.y, menu_bar[1][8].y1, menu_bar[1][8].y2)){cleardevice();break;}
                if(between(msg.y, menu_bar[1][9].y1, menu_bar[1][9].y2)){cleardevice();break;}
            }
            if(between(msg.x,menu_bar[2][0].x1, menu_bar[2][0].x2))
            {
                if(between(msg.y, menu_bar[2][1].y1, menu_bar[2][1].y2)){cleardevice();open_3_1();break;}
                if(between(msg.y, menu_bar[2][2].y1, menu_bar[2][2].y2)){cleardevice();break;}
                if(between(msg.y, menu_bar[2][3].y1, menu_bar[2][3].y2)){cleardevice();open_3_3();break;}
                if(between(msg.y, menu_bar[2][4].y1, menu_bar[2][4].y2)){cleardevice();open_3_4();break;}
                if(between(msg.y, menu_bar[2][5].y1, menu_bar[2][5].y2)){cleardevice();open_3_5();break;}
                if(between(msg.y, menu_bar[2][6].y1, menu_bar[2][6].y2)){cleardevice();open_3_6();break;}
                if(between(msg.y, menu_bar[2][7].y1, menu_bar[2][7].y2)){cleardevice();open_3_7();break;}
                if(between(msg.y, menu_bar[2][8].y1, menu_bar[2][8].y2)){cleardevice();open_3_8();break;}
                if(between(msg.y, menu_bar[2][9].y1, menu_bar[2][9].y2)){cleardevice();break;}
            }
            if(between(msg.x,menu_bar[3][0].x1, menu_bar[3][0].x2))
            {
                if(between(msg.y, menu_bar[3][1].y1, menu_bar[3][1].y2)){cleardevice();open_4_1();break;}
                if(between(msg.y, menu_bar[3][2].y1, menu_bar[3][2].y2)){cleardevice();open_4_2();break;}
                if(between(msg.y, menu_bar[3][3].y1, menu_bar[3][3].y2)){cleardevice();open_4_3();break;}
                if(between(msg.y, menu_bar[3][4].y1, menu_bar[3][4].y2)){cleardevice();break;}
                if(between(msg.y, menu_bar[3][5].y1, menu_bar[3][5].y2)){cleardevice();open_4_5();break;}
                if(between(msg.y, menu_bar[3][6].y1, menu_bar[3][6].y2)){cleardevice();open_4_6();break;}
                if(between(msg.y, menu_bar[3][7].y1, menu_bar[3][7].y2)){cleardevice();open_4_7();break;}
                if(between(msg.y, menu_bar[3][8].y1, menu_bar[3][8].y2)){cleardevice();break;}
                if(between(msg.y, menu_bar[3][9].y1, menu_bar[3][9].y2)){cleardevice();break;}
            }
        }
    }
}

void menu_logo(void)
{
    /**< 创建logo */
    setcaption("C指针与链表动态演示学习工具");
    setcolor(YELLOW);
    setfont(60,0,"华文彩云");
    outtextxy(80,30,"C指针与链表动态演示学习工具");
    setfont(16,0,"宋体");
    setcolor(WHITE);
}
